buildscript {
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}
plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: "com.ewerk.gradle.plugins.querydsl"

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'


    // Spring Boot Starter
    testImplementation ('org.springframework.boot:spring-boot-starter-test')

    // Lombok
    implementation ('org.projectlombok:lombok')
    compileOnly ('org.projectlombok:lombok:1.18.16')
    annotationProcessor ('org.projectlombok:lombok:1.18.16')

    // DB
    runtimeOnly ('mysql:mysql-connector-java') //mysql8
    //runtimeOnly 'mysql:mysql-connector-java:5.1.47' //mysql5
    implementation ('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-data-jpa') //mysql 5버전의 경우 삭제.



    // Web
    implementation ('org.springframework.boot:spring-boot-starter-web')

    // Security, Authentication
    implementation('org.springframework.boot:spring-boot-starter-security')
    compile(group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1')
    compile('io.jsonwebtoken:jjwt:0.9.1')

    implementation('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')

    // Spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'
    //querydsl 추가
    implementation 'com.querydsl:querydsl-apt'




}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝
